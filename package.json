{
	"name": "theme-chimera",
	"description": "A dark theme for Visual Studio Code inspired by the Dracula, Dark, and Dark+ themes",
	"version": "0.3.0",
	"author": {
		"name": "roydukkey",
		"email": "contact@changelog.me",
		"url": "http://changelog.me"
	},
	"publisher": "roydukkey",
	"license": "MIT",
	"homepage": "https://github.com/roydukkey/chimera-theme/blob/master/README.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/roydukkey/chimera-theme.git"
	},
	"bugs": {
		"url": "https://github.com/roydukkey/chimera-theme/issues"
	},
	"keywords": [
		"chimera",
		"color-theme",
		"dark",
		"dracula",
		"theme"
	],
	"displayName": "Chimera Theme",
	"categories": [
		"Themes"
	],
	"galleryBanner": {
		"color": "#1e1f29",
		"theme": "dark"
	},
	"icon": "icon.png",
	"main": "./dist/extension.js",
	"contributes": {
		"themes": [
			{
				"label": "Chimera+",
				"uiTheme": "vs-dark",
				"path": "./dist/chimera-plus.json"
			},
			{
				"label": "Chimera",
				"uiTheme": "vs-dark",
				"path": "./dist/chimera.json"
			}
		],
		"configuration": {
			"title": "Chimera Theme",
			"properties": {
				"theme-chimera.plus.contrastConstants": {
					"type": "boolean",
					"scope": "machine",
					"default": false,
					"description": "Contrast constants and enum members from variables and parameters."
				}
			}
		}
	},
	"activationEvents": [
		"*"
	],
	"engines": {
		"vscode": "^1.49.0"
	},
	"devDependencies": {
		"@types/color": "^3.0.1",
		"@types/color-string": "^1.5.0",
		"@types/dot-object": "^2.1.2",
		"@types/gulp": "^4.0.7",
		"@types/node": "^14.11.2",
		"@types/vscode": "^1.49.0",
		"@typescript-eslint/eslint-plugin": "^4.3.0",
		"@typescript-eslint/parser": "^4.3.0",
		"color": "^3.1.2",
		"color-string": "^1.5.3",
		"cspell": "^4.1.0",
		"dot-object": "^2.1.4",
		"eslint": "^7.10.0",
		"eslint-plugin-tsdoc": "^0.2.7",
		"gulp": "^4.0.2",
		"ts-node": "^9.0.0",
		"typescript": "^4.0.3"
	},
	"scripts": {
		"clean": "node -e \"fs.rmdirSync('./dist', { recursive: true }); const pack = './$npm_package_name-$npm_package_version.vsix'; fs.existsSync(pack) && fs.unlinkSync(pack)\"",
		"lint": "npm run lint:es && npm run lint:spelling",
		"lint:es": "eslint --ext .ts gulpFile.ts ./src ./build",
		"lint:spelling": "cspell --config './.vscode/cSpell.json' '**/{.*/**/,.*/**/.,,.}*'",
		"build": "npm run clean && npm run build:theme && npm run build:extension",
		"build:extension": "tsc ./src/extension.ts @./tsconfig.args",
		"build:theme": "ts-node ./build/theme.ts",
		"watch": "npm run build && gulp watch",
		"postinstall": "npm run build",
		"vscode:prepublish": "npm run lint && npm run build"
	},
	"eslintConfig": {
		"ignorePatterns": [
			"dist/*"
		],
		"parser": "@typescript-eslint/parser",
		"parserOptions": {
			"ecmaVersion": 6,
			"sourceType": "module"
		},
		"plugins": [
			"@typescript-eslint",
			"eslint-plugin-tsdoc"
		],
		"extends": [
			"eslint:recommended",
			"plugin:@typescript-eslint/recommended"
		],
		"rules": {
			"arrow-parens": [
				"error",
				"always"
			],
			"arrow-spacing": [
				"error",
				{
					"before": true,
					"after": true
				}
			],
			"brace-style": [
				"error",
				"stroustrup",
				{
					"allowSingleLine": false
				}
			],
			"comma-spacing": [
				"error",
				{
					"before": false,
					"after": true
				}
			],
			"curly": [
				"error"
			],
			"comma-dangle": [
				"error",
				"never"
			],
			"key-spacing": [
				"error"
			],
			"object-curly-spacing": [
				"error",
				"always"
			],
			"quotes": [
				"error",
				"single"
			],
			"semi": [
				"error"
			],
			"sort-imports": [
				"error",
				{
					"ignoreCase": false,
					"ignoreDeclarationSort": false,
					"ignoreMemberSort": false,
					"memberSyntaxSortOrder": [
						"single",
						"multiple",
						"all",
						"none"
					]
				}
			],
			"space-before-blocks": [
				"error",
				"always"
			],
			"space-before-function-paren": [
				"error",
				"always"
			],
			"tsdoc/syntax": "warn"
		}
	}
}
