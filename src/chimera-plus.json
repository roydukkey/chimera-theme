{
	"$schema": "vscode://schemas/color-theme",
	"name": "Chimera+",
	"include": "./chimera.json",
	"tokenColors": [
		{
			"name": "Function declarations",
			"scope": [
				"entity.name.function",
				"support.function",
				"support.constant.handlebars"
			],
			"settings": {
				"foreground": "%%Orange%%"
			}
		},
		{
			"name": "Types declaration and references",
			"scope": [
				"meta.return-type",
				"support.class",
				"support.type",
				"entity.name.type",
				"entity.name.class",
				"storage.type.numeric.go",
				"storage.type.byte.go",
				"storage.type.boolean.go",
				"storage.type.string.go",
				"storage.type.uintptr.go",
				"storage.type.error.go",
				"storage.type.rune.go",
				"storage.type.cs",
				"storage.type.generic.cs",
				"storage.type.modifier.cs",
				"storage.type.variable.cs",
				"storage.type.annotation.java",
				"storage.type.generic.java",
				"storage.type.java",
				"storage.type.object.array.java",
				"storage.type.primitive.array.java",
				"storage.type.primitive.java",
				"storage.type.token.java",
				"storage.type.groovy",
				"storage.type.annotation.groovy",
				"storage.type.parameters.groovy",
				"storage.type.generic.groovy",
				"storage.type.object.array.groovy",
				"storage.type.primitive.array.groovy",
				"storage.type.primitive.groovy"
			],
			"settings": {
				"foreground": "%%Green%%"
			}
		},
		{
			"name": "Types declaration and references, TS grammar specific",
			"scope": [
				"meta.type.cast.expr",
				"meta.type.new.expr",
				"support.constant.math",
				"support.constant.dom",
				"support.constant.json",
				"entity.other.inherited-class"
			],
			"settings": {
				"foreground": "%%Green%%"
			}
		},
		{
			"name": "Control flow keywords",
			"scope": "keyword.control",
			"settings": {
				"foreground": "%%Purple%%"
			}
		},
		{
			"name": "Variable and parameter name",
			"scope": [
				"variable",
				"meta.definition.variable.name",
				"support.variable",
				"entity.name.variable"
			],
			"settings": {
				"foreground": "%%Cyan%%"
			}
		},
		{
			"name": "Object keys, TS grammar specific",
			"scope": [
				"meta.object-literal.key"
			],
			"settings": {
				"foreground": "%%Cyan%%"
			}
		},
		{
			"name": "CSS property value",
			"scope": [
				"support.constant.property-value",
				"support.constant.font-name",
				"support.constant.media-type",
				"support.constant.media",
				"constant.other.color.rgb-value",
				"constant.other.rgb-value",
				"support.constant.color"
			],
			"settings": {
				"foreground": "%%Yellow%%"
			}
		},
		{
			"name": "Regular expression groups",
			"scope": [
				"punctuation.definition.group.regexp",
				"punctuation.definition.group.assertion.regexp",
				"punctuation.definition.character-class.regexp",
				"punctuation.character.set.begin.regexp",
				"punctuation.character.set.end.regexp",
				"keyword.operator.negation.regexp",
				"support.other.parenthesis.regexp"
			],
			"settings": {
				"foreground": "%%Yellow%%"
			}
		},
		{
			"scope": [
				"constant.character.character-class.regexp",
				"constant.other.character-class.set.regexp",
				"constant.other.character-class.regexp",
				"constant.character.set.regexp"
			],
			"settings": {
				"foreground": "%%Red%%"
			}
		},
		{
			"scope": [
				"keyword.operator.or.regexp",
				"keyword.control.anchor.regexp"
			],
			"settings": {
				"foreground": "%%Orange%%"
			}
		},
		{
			"scope": "keyword.operator.quantifier.regexp",
			"settings": {
				"foreground": "#d7ba7d"
			}
		},
		{
			"scope": "constant.character",
			"settings": {
				"foreground": "%%Pink%%"
			}
		},
		{
			"scope": "constant.character.escape",
			"settings": {
				"foreground": "#d7ba7d"
			}
		},
		{
			"scope": [
				"source.css keyword",
				"source.sass keyword"
			],
			"settings": {
				"foreground": "%%Red%%"
			}
		},
		{
			"scope": [
				"keyword.control.at-rule.function.scss",
				"keyword.control.at-rule.mixin.scss",
				"keyword.control.at-rule.include.scss",
				"keyword.control.at-rule.extend.scss"
			],
			"settings": {
				"foreground": "%%Green%%"
			}
		},
		{
			"scope": [
				"keyword.control.debug.scss",
				"keyword.control.warn.scss",
				"keyword.control.error.scss",
			],
			"settings": {
				"foreground": "%%Red%%"
			}
		},
		{
			"name": "Markdown Link/Image",
			"scope": [
				"markup.underline.link.markdown",
				"markup.underline.link.image.markdown",
				"punctuation.definition.metadata.markdown"
			],
			"settings": {
				"foreground": "%%Cyan%%"
			}
		},
		{
			"name": "Markdown Link Title/Description",
			"scope": [
				"string.other.link.title.markdown",
				"string.other.link.description.markdown"
			],
			"settings": {
				"foreground": "%%Green%%"
			}
		},
		{
			"scope": [
				"entity.other.attribute-name.handlebars",
				"variable.parameter.handlebars"
			],
			"settings": {
				"foreground": "%%Green%%"
			}
		},
		{
			"name": "C# Preprocessors All",
			"scope": [
				"meta.preprocessor.cs",
				"meta.preprocessor.cs string"
			],
			"settings": {
				"foreground": "%%Yellow%%7F"
			}
		},
		{
			"name": "C# Preprocessors Directives",
			"scope": [
				"meta.preprocessor.cs keyword",
				"meta.preprocessor.cs punctuation.separator.hash"
			],
			"settings": {
				"foreground": "%%Purple%%7F"
			}
		},
		{
			"name": "C# Preprocessors Operator & Parenthesis",
			"scope": [
				"meta.preprocessor.cs keyword.operator",
				"meta.preprocessor.cs punctuation.parenthesis",
			],
			"settings": {
				"foreground": "%%Foreground%%7F"
			}
		},
		{
			"name": "C# Preprocessors Symbols",
			"scope": "meta.preprocessor.cs entity.name.variable.preprocessor.symbol.cs",
			"settings": {
				"foreground": "%%Cyan%%7F"
			}
		},
		{
			"name": "C# Preprocessors Numeric",
			"scope": "meta.preprocessor.cs constant.numeric",
			"settings": {
				"foreground": "%%GreenYellowMix%%7F"
			}
		}
	]
}
